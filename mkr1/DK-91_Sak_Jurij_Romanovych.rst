==============================
Сак Юрій Романович
==============================


#. Гілки в Git: для чого використовуються, який принцип роботи з гілками. Наведіть команди для створення нової гілки та переключення
   між гілками.
#. Який формат опису повідомлень комітів використовується в курсі? Навіщо потрібно дотримуватися певного формату?
   Наведіть приклад команди, що додає до репозиторію коміт з важливими виправленнями кодової бази

#. Оператор ідентичності та оператор ``==``. В чому їх відмінності? 
   Коли в умовних конструкціях варто використовувати той чи інший оператор?
#. Якому емодзі відповідає байтова строка ``b'\xff\xfe=\xd8\r\xdc'`` (UTF-16)? Що значить даний запис байтової строки?
   Наведіть приклад коду, що перекодує дану строку в UTF-8 та вкажіть результат у вигляді коментаря

#. Створіть функцію, яка приймає в якості першого аргументу бажаний опір послідовно з'єднаних резисторів *R* [Ом],
   а в якості подальших аргументів – величини резисторів, що є в наявності [Ом].
   Функція повертає кортеж (tuple), першим елементом якого є словник типу ``{номінал: кількість}``, а другим
   елементом – абсолютне відхилення результуючого опору від бажаного [Ом].
#. Наведіть приклад функції, що **коректно** приймає в якості значення за замовчанням mutable-об'єкт.
   Чому коректно робити саме так?

#. Які цикли Python вам відомі? Яким чином примусово перейти до наступної ітерації в тілі циклу? Наведіть приклад коду.
#. Створити клас Animal. Унаслідувати від нього два класи *Mammal* та *Amphibian*.
   Від класу *Mammal* унаслідувати два класи – *Cat* та *Dog*.
   Клас Animal передбачає наявність поля ``likes_water`` (на рівні класу, не об'єкта), яке за замовчуванням задане рівним ``False``
   і перевизначається в дочірніх класах (за необхідності).
   Для класу *Mammal* визначити метод ``milk()``, який виводитиме в стандартний вивід *"{name}: delicious!"*.
   Для *Amphibian* та *Dog* визначити метод ``swim()``, який виводитиме в стандартний вивід *"{name}: swimming makes me feel good"*.
   При написанні ``swim()`` уникати copy-paste, натомість, згрупувати єдину логіку в окрему функцію, яку викликатиме кожен клас.
   Замість *{name}* підставляти значення атрибута ``name``, який задається при створенні об'єкту.
   Навести приклад використання.
