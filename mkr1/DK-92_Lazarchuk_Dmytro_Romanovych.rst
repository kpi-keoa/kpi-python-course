==============================
Лазарчук Дмитро Романович
==============================


#. Що таке Git та для чого використовується? Як створити новий локальний репозиторій Git? Наведіть команди.
#. Як підтягнути зміни, що відбулись у віддаленому upstream-репозиторії (гілка master) до локального репозиторію? Наведіть команду.

#. Перерахуйте та коротко окресліть відомі вам **базові** типи даних Python.
#. Словник (dict). Для чого використовується? Шляхи створення. 
   Як за допомогою ``dict`` зімітувати множину (``set``) та чому *зазвичай* не варто цього робити? Наведіть приклади коду.

#. Що таке she-bang та для чого використовується? Який she-bang буде максимально коректним для Python 3?
   Чи використовується she-bang в бібліотеках? Якщо так, чому? Якщо ні, коли?
#. Keyword та keyword-only аргументи функцій. Яким чином функція може приймати довільне значення keyword-аргументів?
   Наведіть приклад (пов'язаний з галуззю електроніки, наприклад, розрахунок за формулою).

#. Які цикли Python вам відомі? Яким чином примусово перейти до наступної ітерації в тілі циклу? Наведіть приклад коду.
#. Створити клас Animal. Унаслідувати від нього два класи *Mammal* та *Amphibian*.
   Від класу *Mammal* унаслідувати два класи – *Cat* та *Dog*.
   Клас Animal передбачає наявність поля ``likes_water`` (на рівні класу, не об'єкта), яке за замовчуванням задане рівним ``False``
   і перевизначається в дочірніх класах (за необхідності).
   Для класу *Mammal* визначити метод ``milk()``, який виводитиме в стандартний вивід *"{name}: delicious!"*.
   Для *Amphibian* та *Dog* визначити метод ``swim()``, який виводитиме в стандартний вивід *"{name}: swimming makes me feel good"*.
   При написанні ``swim()`` уникати copy-paste, натомість, згрупувати єдину логіку в окрему функцію, яку викликатиме кожен клас.
   Замість *{name}* підставляти значення атрибута ``name``, який задається при створенні об'єкту.
   Навести приклад використання.
