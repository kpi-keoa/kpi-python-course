==============================
Бодак Єгор Євгенович
==============================


#. Як підтягнути зміни, що відбулись у віддаленому upstream-репозиторії (гілка master) до локального репозиторію? Наведіть команду.
#. Що таке об'єднання гілок та для чого використовується? Конфлікти при об'єднанні.
   Наведіть приклад конфлікту (синтаксис) та команди для внесення змін до репозиторію після вирішення конфлікту.

#. Перерахуйте та коротко окресліть відомі вам **базові** типи даних Python.
#. Множина (set). Для чого слугує? Чим відрізняється від списку (list) та кортежа (tuple)? Наведіть приклади використання.

#. Створіть функцію, яка приймає в якості першого аргументу бажаний опір паралельно з'єднаних резисторів *R* [Ом],
   а в якості подальших аргументів – величини резисторів, що є в наявності [Ом].
   Функція повертає кортеж (tuple), першим елементом якого є словник типу ``{номінал: кількість}``, а другим
   елементом – абсолютне відхилення результуючого опору від бажаного [Ом].
#. Docstring у функціях. Для чого використовуються? Наведіть приклад функції, що виконує розрахунок за певною формулою
   з області електроніки або фінансів (на власний розсуд) та містить Docsting (Coding Style – Google)

#. Які цикли Python вам відомі? Яким чином можна примусово вийти з циклу?
#. Створити клас Animal. Унаслідувати від нього два класи *Mammal* та *Amphibian*.
   Від класу *Mammal* унаслідувати два класи – *Cat* та *Dog*.
   Клас Animal передбачає наявність поля ``likes_water`` (на рівні класу, не об'єкта), яке за замовчуванням задане рівним ``False``
   і перевизначається в дочірніх класах (за необхідності).
   Для класу *Mammal* визначити метод ``milk()``, який виводитиме в стандартний вивід *"{name}: delicious!"*.
   Для *Amphibian* та *Dog* визначити метод ``swim()``, який виводитиме в стандартний вивід *"{name}: swimming makes me feel good"*.
   При написанні ``swim()`` уникати copy-paste, натомість, згрупувати єдину логіку в окрему функцію, яку викликатиме кожен клас.
   Замість *{name}* підставляти значення атрибута ``name``, який задається при створенні об'єкту.
   Навести приклад використання.
