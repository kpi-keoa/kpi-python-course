==============================
Тисяк Євгеній Володимирович
==============================


#. Що таке "fork" в термінології Git. Вкажіть принципи роботи з fork'ами. Наведіть команду для створення локальної копії віддаленого
   репозиторію https://github.com/kpi-keoa/kpi-embedded-linux-course

   - fork це дозвоєляє створити клон репозиторія кий буде привзаний до мого акаунту. Після цього можна вже зробити класичний клон 
   репозиторія собі на залізо. Я fork робив через браузер, а клон на залізо для https://github.com/kpi-keoa/kpi-embedded-linux-course 
   можна зробити ось так git clone https://github.com/kpi-keoa/kpi-embedded-linux-course.
#. Який формат опису повідомлень комітів використовується в курсі? Навіщо потрібно дотримуватися певного формату?
   Наведіть приклад команди, що додає до репозиторію коміт з важливими виправленнями кодової бази
   
   - git marge upstream/master git checkout master git checkout -b My_branch git add -A git commit -m "my" git push origin My_branch
   Одного формату слід дотримуватись для того, щоб було легше розуміти коміти.

#. Множина (set). Для чого слугує? Чим відрізняється від списку (list) та кортежа (tuple)? Наведіть приклади використання.

   -set зберігає елементи в невпорядкованому вигляді, всі елементи унікальні і їх не можна змінювати.
#. Оператор ідентичності та оператор ``==``. В чому їх відмінності? 
   Коли в умовних конструкціях варто використовувати той чи інший оператор?

   -оператор ідентичності перевіряє чи наведені ідентифікатори відностяться до одного об'якту чи ні.
   оператор == перевіряє чи ідентифікатори однокові за вмістом.
   оператор ідентичності корисний для відладки і оптимізації.

#. Що таке she-bang та для чого використовується? Який she-bang буде максимально коректним для Python 3?
   Чи використовується she-bang в скриптах? Якщо так, чому? Якщо ні, коли?
   
   -she-bang визначає те, як буде виконуватись код. #!/usr/bin/env python3  
#. Аргументи функцій. Яким чином задати значення аргументу за замовчуванням, якщо таким аргументом є порожній список? Коли це не спрацює?
   Наведіть приклад (пов'язаний з галуззю електроніки, наприклад, розрахунок за формулою).
   
   -Параметри зі значенням за замовчуванням у списку параметрів не можуть передувати параметрам без значення за замовчуванням. Тобто 
   значеннями за замовчуванням можуть бути забезпечені тільки параметри, які знаходяться в кінці списку параметрів. 
#. Які цикли Python вам відомі? Який цикл буде виконуватися швидше та чому? 
   Наведіть приклад коду для виводу списка за допомогою кожного з типів циклу.

   -є while і for. while - універсальніший і тому повільніший.
   a_dict = {"one":1, "two":2, "three":3}
 
   for key in a_dict:
    print(key)
   

#. Створити клас Animal. Унаслідувати від нього два класи *Mammal* та *Amphibian*.
   Від класу *Mammal* унаслідувати два класи – *Cat* та *Dog*.
   Для класу *Mammal* визначити метод ``milk()``, який не буде реалізований в даному класі, натомість реалізовуватиметься в субкласах.
   Для класу *Amphibian* визначити метод ``swim()``, який виводитиме в стандартний вивід *"{name}: swimming makes me feel good"*.
   При виклику метода ``milk()``, *Cat* повинен виводити *"{name}: meow!"*, а *Dog* – *"{name}: woww!"*.
   Замість *{name}* підставляти значення атрибута ``name``, який задається при створенні об'єкту.
   Навести приклад використання.

   -        class Animal:
            pass
            
        class Mammal(Animal):
            def milk():
                pass

        class Amphibian(Animal):
            def swim(name):
                print(name, ": swimming makes me feel good")

        class Cat(Mammal):
            def milk(name):
                print(name, ": meow!")

        class Dog(Mammal):
            def milk(name):
                print(name, ": woww!")
      >>> my_cat = Cat
      >>> my_dog = Dog
      >>> my_cat.milk('Muchik')
      Muchik : meow!
      >>> my_dog.milk('Beem')
      Beem : woww!
      >>> 
