==============================
Кошарюк Назар Вікторович
==============================


#. Гілки в Git: для чого використовуються, який принцип роботи з гілками. Наведіть команди для створення нової гілки та переключення
   між гілками.
#. Як підтягнути зміни, що відбулись у віддаленому upstream-репозиторії (гілка master) до локального репозиторію? Наведіть команду.

#. Перерахуйте та коротко окресліть відомі вам **базові** типи даних Python.
#. Числові типи Python. **Коротко** опишіть з прикладами використання. Створіть функцію, що розраховує реактивний опір
   конденсатора з ємністю *C* [Ф] на частоті *f* [Гц]. Якщо значення *f* не задано користувачем, за замовчуванням
   використати 1 кГц.

#. Що таке she-bang та для чого використовується? Який she-bang буде максимально коректним для Python 3?
   Чи використовується she-bang в скриптах? Якщо так, чому? Якщо ні, коли?
#. Наведіть приклад функції, що **коректно** приймає в якості значення за замовчанням mutable-об'єкт.
   Чому коректно робити саме так?

#. Які цикли Python вам відомі? Яким чином можна реалізувати "якщо не було виконано жодного разу" з циклами?
#. Створити клас Animal. Унаслідувати від нього два класи *Mammal* та *Amphibian*.
   Від класу *Mammal* унаслідувати два класи – *Cat* та *Dog*.
   Клас Animal передбачає наявність поля ``likes_water`` (на рівні класу, не об'єкта), яке за замовчуванням задане рівним ``False``
   і перевизначається в дочірніх класах (за необхідності).
   Для класу *Mammal* визначити метод ``milk()``, який виводитиме в стандартний вивід *"{name}: delicious!"*.
   Для *Amphibian* та *Dog* визначити метод ``swim()``, який виводитиме в стандартний вивід *"{name}: swimming makes me feel good"*.
   При написанні ``swim()`` уникати copy-paste, натомість, згрупувати єдину логіку в окрему функцію, яку викликатиме кожен клас.
   Замість *{name}* підставляти значення атрибута ``name``, який задається при створенні об'єкту.
   Навести приклад використання.
